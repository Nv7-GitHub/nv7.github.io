<div class="container text-center mt-3">
  <h1>LetterBoxed</h1>
  <p class="lead">
   This is a program I wrote to solve <a href="https://www.nytimes.com/puzzles/letter-boxed">New York Times' "Letter Boxed" puzzle</a>. You can find a clean, commented version of the program <a href="https://github.com/Nv7-GitHub/FunRepository/blob/master/LetterBoxed/main.go">here</a>. The default values are from the Letter Boxed puzzle on July 19, 2022.
  </p>
  <span>
    <div class="form-group">
      <vgform:Input type="text" :Value="&vgform.StringPtr{&c.List1}" class="form-control mx-sm-1 mb-2"></vgform:Input>
      <vgform:Input type="text" :Value="&vgform.StringPtr{&c.List2}" class="form-control mx-sm-1 mb-2"></vgform:Input>
      <vgform:Input type="text" :Value="&vgform.StringPtr{&c.List3}" class="form-control mx-sm-1 mb-2"></vgform:Input>
      <vgform:Input type="text" :Value="&vgform.StringPtr{&c.List4}" class="form-control mx-sm-1 mb-2"></vgform:Input>
    </div>
    <button class="btn btn-primary" @click="c.solveLetterBoxed()">Solve</button>
  </span>

  <p class="lead" vg-if="len(c.Output) > 0">
    <br>
    Output
  </p>

   <ul class="list-group">
      <li class="list-group-item d-flex justify-content-between" vg-for="_, item := range c.Output">
      <div class="p-0 m-0 flex-grow-1" vg-content="item" style="transform: translateY(20%);"></div> 
      <button class="btn btn-danger" @click="c.RemoveFn(item)">
        <i class="fa fa-trash"></i>
      </button>
    </li>
    </ul>
</div>

<script type="application/x-go">
import (
  "strings"
  _ "embed"

  "github.com/vugu/vugu/vgform"
)

type LetterBoxed struct {
  List1 string `vugu: "data"`
  List2 string `vugu: "data"`
  List3 string `vugu: "data"`
  List4 string `vugu: "data"`
  Remove map[string]struct{}
  Output []string `vugu: "data"`
}

func handle(err error) {
  if err != nil {
    panic(err)
  }
}

//go:embed words.txt
var wordData string

func (c *LetterBoxed) Init(ctx vugu.InitCtx) {
  c.List1 = "bzk"
  c.List2 = "tqi"
  c.List3 = "sul"
  c.List4 = "are"
  words = strings.Split(strings.ToLower(string(wordData)), "\n")
  c.Remove = make(map[string]struct{})
}

func (c *LetterBoxed) RemoveFn(item string) {
  c.Remove[item] = struct{}{}
  c.solveLetterBoxed()
}
</script>
